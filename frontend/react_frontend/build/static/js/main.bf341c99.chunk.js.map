{"version":3,"sources":["enums.js","utils.js","components/ImageCard.js","components/ImageCards.js","components/ImageMenu.js","App.js","index.js"],"names":["BlendingModeEnum","DODGE","ADDITION","OVERLAY","GRAIN_EXTRACT","DARKEN_ONLY","SCREEN","DIVIDE","GRAIN_MERGE","DIFFERENCE","MULTIPLY","SOFT_LIGHT","HARD_LIGHT","LIGHTEN_ONLY","NONE","FilterEnum","INVERT","POSTERIZE","POSTERIZE2","SOLARIZE","EMBOSS","GAUSSIAN","FIND_EDGES","SizeEnum","_1280x1280","_1024x768","_768x1024","_1600x900","none","goodSearchTerms","Object","freeze","capitalizeFirstLetter","string","charAt","toUpperCase","slice","ImageCard","this","props","card","id","mode","filter","term","opacity","fadeOut","fadeIn","className","onAnimationEnd","delCard","bind","type","value","placeholder","aria-label","aria-describedby","onChange","changeTerm","onClick","setFadeOut","Typography","variant","changeMode","values","map","changeFilter","Slider","max","min","step","scale","x","changeOpacity","Component","ImageCards","style","display","flexFlow","justifyContent","paddingBottom","backgroundColor","boxShadow","margin","borderRadius","minHeight","cards","newCard","disabled","length","ImageMenu","settings","changeSize","generateImage","toggleFeatured","randomizeTerms","randomizeModes","is_featured","useState","editorShown","setEditorShown","width","height","float","marginLeft","size","marginBottom","marginTop","checked","for","generating","maxWidth","marginRight","src","b64src","show","onClose","App","state","featured_only","setState","Math","floor","random","vals","e","width_change","height_change","target","newValue","console","log","insertedCard","uuid","a","fetch","method","headers","body","JSON","stringify","response","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAaA,G,MAAmB,CAC5BC,MAAO,QACPC,SAAU,WACVC,QAAS,UACTC,cAAe,gBACfC,YAAa,cACbC,OAAQ,SACRC,OAAQ,SACRC,YAAa,cACbC,WAAY,aACZC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdC,KAAK,SAIIC,EAAa,CACxBC,OAAQ,SACRC,UAAW,YACXC,WAAY,cACZC,SAAU,WACVC,OAAQ,SACRC,SAAU,gBACVC,WAAY,aACZR,KAAM,QAGKS,EAAW,CACtBC,WAAY,YACZC,UAAW,WACXC,UAAW,WACXC,UAAW,WACXC,KAAM,OAGKC,EAAkB,CAAC,OAAQ,YAAa,SAAU,YAAa,WAAY,WAAY,WAAY,YAChH,UAAW,WAAY,UAAW,YAAa,QAAS,iBAAkB,eAAgB,QAC1F,eAAgB,aAAc,UAAW,oBAAqB,iBAAkB,cAChF,gBAAiB,YAAa,gBAAiB,WAAY,kBAAmB,SAAU,MACxF,gBAAiB,SAAU,QAAS,SACpC,aAAc,WAAY,YAAa,aAAc,SAAU,YAAa,SAAU,aACtF,UAAW,SAAU,cAAe,QAAS,YAAa,mBAAoB,kBAC9E,YAAa,SAAU,kBAAmB,iBAAkB,gBAAiB,iBAC7E,qBAAsB,MAAO,mBAAoB,SAAU,SAAU,QAAS,QAC9E,cAAe,QAAS,aAAc,UAAW,kBACjD,SAAU,QAAS,SAEnBC,OAAOC,OAAO/B,GACd8B,OAAOC,OAAOhB,GACde,OAAOC,OAAOR,GC9CCS,MAJf,SAA+BC,GAC3B,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,kBCmE1CC,EA/Df,uKAEc,IAAD,EACwDC,KAAKC,MAAMC,KAAhEC,EADH,EACGA,GAAIC,EADP,EACOA,KAAMC,EADb,EACaA,OAAQC,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,QAASC,EADpC,EACoCA,QAASC,EAD7C,EAC6CA,OAClD,OAEI,cADA,CACA,OAAKC,UAAW,oBAAsBF,EAAU,WAAa,KAAOC,EAAS,UAAY,IACrFE,eAAgBX,KAAKC,MAAMW,QAAQC,KAAKb,KAAMG,GADlD,UAGI,qBAAKO,UAAU,cAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAOI,KAAK,SAASC,MAAOT,EAAMI,UAAU,uBAAuBM,YAAY,cAAcC,aAAW,SAASC,mBAAiB,eAC9HC,SAAUnB,KAAKC,MAAMmB,WAAWP,KAAKb,KAAMG,OAEnD,wBAAQO,UAAU,oBAAoBW,QAASrB,KAAKC,MAAMqB,WAAWT,KAAKb,KAAMG,GAAhF,oBAIR,sBAAKO,UAAU,YAAf,UAGQ,sBAAKA,UAAU,kCAAf,UACI,cAACa,EAAA,EAAD,CAAYC,QAAQ,YAApB,mBACA,wBAAQd,UAAU,wBAAwBK,MAAOX,EACzCe,SAAUnB,KAAKC,MAAMwB,WAAWZ,KAAKb,KAAMG,GADnD,SAGKX,OAAOkC,OAAOhE,GAAkBiE,KAAI,SAACvB,GAAD,OACjC,wBAAmBW,MAAOX,EAA1B,SAAiCV,EAAsBU,IAA1CA,WAOzB,sBAAKM,UAAU,kCAAf,UACA,cAACa,EAAA,EAAD,qBACI,wBAAQb,UAAU,wBAAwBK,MAAOV,EACzCc,SAAUnB,KAAKC,MAAM2B,aAAaf,KAAKb,KAAMG,GADrD,SAGKX,OAAOkC,OAAOjD,GAAYkD,KAAI,SAACtB,GAAD,OAC3B,wBAAqBU,MAAOV,EAA5B,SAAqCX,EAAsBW,IAA9CA,WAMzB,sBAAKK,UAAU,kCAAf,UACI,cAACa,EAAA,EAAD,CAAYC,QAAQ,YAApB,qBACA,cAACK,EAAA,EAAD,CAAQd,MAAOR,EAASuB,IAAK,EAAGC,IAAK,EAAGC,KAAM,IAAMC,MAAO,SAACC,GAAD,OAAS,IAAFA,GAC9Df,SAAUnB,KAAKC,MAAMkC,cAActB,KAAKb,KAAMG,kBAlD9E,GAA+BiC,aC2BhBC,E,uKA3BA,IAAD,OACN,OACI,sBAAKC,MAAO,CAACC,QAAS,OAAQC,SAAU,WAAYC,eAAgB,aAChEC,cAAe,OAAQC,gBAAiB,YAAaC,UAAW,2CAChEC,OAAO,OAAQC,aAAc,OAAQC,UAAW,SAFpD,UAGC/C,KAAKC,MAAM+C,MAAMrB,KAAI,SAACzB,GAAD,OAClB,cAAC,EAAD,CAEIA,KAAMA,EACNuB,WAAY,EAAKxB,MAAMwB,WACvBG,aAAc,EAAK3B,MAAM2B,aACzBO,cAAe,EAAKlC,MAAMkC,cAC1Bf,WAAY,EAAKnB,MAAMmB,WACvBE,WAAY,EAAKrB,MAAMqB,WACvBV,QAAS,EAAKX,MAAMW,SAPfV,EAAKC,OAUlB,wBAAQO,UAAU,eAAeW,QAASrB,KAAKC,MAAMgD,QAASC,SAAUlD,KAAKC,MAAM+C,MAAMG,QAAU,EAAnG,sB,GAnBaf,a,yBC0CVgB,EAzCU,SAAC,GAA0G,IAAxGC,EAAuG,EAAvGA,SAAUC,EAA6F,EAA7FA,WAAYC,EAAiF,EAAjFA,cAAeC,EAAkE,EAAlEA,eAAgBC,EAAkD,EAAlDA,eAAgBC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAAkB,EACzFC,oBAAS,GADgF,mBACxHC,EADwH,KAC3GC,EAD2G,KAE/H,OACI,gCACI,sBAAKxB,MAAO,CAACyB,MAAO,QAASC,OAAQ,QAASC,MAAM,OAAQC,WAAW,OAAQ3B,QAAQ,OAAQC,SAAU,cAAeC,eAAgB,gBAAxI,UACI,wBAAQ/B,UAAU,wBACdK,MAA0B,IAAnBsC,EAASU,MAAc,MAAQV,EAASU,MAAQ,IAAMV,EAASW,OAAQ7C,SAAUmC,EACxFhB,MAAO,CAACyB,MAAO,QAASG,WAAW,OAFvC,SAIK1E,OAAOkC,OAAOzC,GAAU0C,KAAI,SAACwC,GAAD,OACzB,wBAAmBpD,MAAOoD,EAA1B,SAAiCA,GAApBA,QAIrB,sBAAKzD,UAAU,aAAa4B,MAAO,CAAC4B,WAAY,OAAQE,aAAc,OAAtE,UACI,uBAAO1D,UAAU,mBAAmB4B,MAAO,CAAC+B,UAAW,QAASvD,KAAK,WAAWC,MAAM,GAAGZ,GAAG,mBAAmBmE,QAASX,EAAatC,QAASmC,IAC9I,uBAAO9C,UAAU,mBAAmB6D,IAAI,mBAAxC,4CAIJ,wBAAQ7D,UAAU,oBAAoB4B,MAAO,CAACyB,MAAM,QAAS1C,QAASoC,EAAtE,0BACA,wBAAQ/C,UAAU,oBAAoB4B,MAAO,CAACyB,MAAM,QAAS1C,QAASqC,EAAtE,0BACA,wBAAQhD,UAAU,oBAAoB4B,MAAO,CAACyB,MAAM,QAChD1C,QAAS,WAAQyC,GAAe,IADpC,yBAGA,yBAAQpD,UAAU,kBAAkBW,QAASkC,EACzCjB,MAAO,CAACyB,MAAM,OAAQG,WAAW,OAAQhB,SAAUG,EAASmB,WADhE,cAC8EnB,EAASmB,WAAa,gBAAkB,WADtH,UAGJ,qBACIlC,MAAO,CAACmC,SAAU,MAAOT,OAAQ,OAAQC,MAAO,QAASpB,OAAO,OAAQ6B,YAAY,OAAQnC,QAAQ,gBACpGoC,IAAK,yBAAyBtB,EAASuB,SAE3C,cAAC,IAAD,CACIC,KAAMhB,EACNc,IAAK,yBAAyBtB,EAASuB,OACvCE,QAAS,WAAQhB,GAAe,U,SC2JjCiB,E,4MA3LbC,MAAQ,CACNhC,MAAO,CACL,CACE7C,GAAI,EACJG,KAAM,mBACNF,KAAM1C,EAAiBc,KACvB6B,OAAQ5B,EAAWD,KACnB+B,QAAS,EACTC,SAAS,EACTC,QAAQ,GAGV,CACEN,GAAI,EACJG,KAAM,YACNF,KAAM1C,EAAiBM,OACvBqC,OAAQ5B,EAAWD,KACnB+B,QAAS,EACTC,SAAS,EACTC,QAAQ,GAGV,CACEN,GAAI,EACJG,KAAM,WACNF,KAAM1C,EAAiBG,QACvBwC,OAAQ5B,EAAWD,KACnB+B,QAAS,GACTC,SAAS,EACTC,QAAQ,IAIZ4C,SAAU,CACRU,MAAO,KACPC,OAAQ,KACRiB,eAAe,EACfT,YAAY,EACZI,OAAQ,K,EAIZpB,eAAiB,WACf,EAAK0B,SAAS,CAAC7B,SAAS,2BAAM,EAAK2B,MAAM3B,UAAlB,IAA4B4B,eAAgB,EAAKD,MAAM3B,SAAS4B,mB,EAGzFxB,eAAiB,WACf,EAAKyB,SAAS,CAAElC,MAAO,EAAKgC,MAAMhC,MAAMrB,KAAI,SAAAzB,GAE1C,OADAA,EAAKI,KAAOf,EAAgB4F,KAAKC,MAAMD,KAAKE,SAAW9F,EAAgB4D,SAChEjD,Q,EAIXwD,eAAiB,WACf,EAAKwB,SAAS,CAAElC,MAAO,EAAKgC,MAAMhC,MAAMrB,KAAI,SAAAzB,GAC1C,IAAMoF,EAAO9F,OAAOkC,OAAOhE,GAE3B,OADAwC,EAAKE,KAAOkF,EAAKH,KAAKC,MAAMD,KAAKE,SAAWC,EAAKnC,SAC1CjD,Q,EAIXoD,WAAa,SAACiC,GACZ,IAAIC,EAAcC,EAClBD,EAAeC,EAAgB,KACR,aAAnBF,EAAEG,OAAO3E,OACXyE,EAAe,KACfC,EAAgB,KACY,aAAnBF,EAAEG,OAAO3E,OAClByE,EAAe,IACfC,EAAgB,MACY,aAAnBF,EAAEG,OAAO3E,OAClByE,EAAe,KACfC,EAAgB,KACY,QAAnBF,EAAEG,OAAO3E,QAClByE,EAAe,EACfC,EAAgB,GAElB,EAAKP,SAAS,CAAC7B,SAAS,2BAAM,EAAK2B,MAAM3B,UAAlB,IAA4BU,MAAOyB,EAAcxB,OAAQyB,O,EAGlFhE,WAAa,SAACtB,EAAIoF,GAChB,EAAKL,SAAS,CAAElC,MAAO,EAAKgC,MAAMhC,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKE,KAAOmF,EAAEG,OAAO3E,OAEhBb,Q,EAIX0B,aAAe,SAACzB,EAAIoF,GAClB,EAAKL,SAAS,CAAElC,MAAO,EAAKgC,MAAMhC,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKG,OAASkF,EAAEG,OAAO3E,OAElBb,Q,EAIXkB,WAAa,SAACjB,EAAIoF,GAChB,EAAKL,SAAS,CAAElC,MAAO,EAAKgC,MAAMhC,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKI,KAAOiF,EAAEG,OAAO3E,OAEhBb,Q,EAIXiC,cAAgB,SAAChC,EAAIoF,EAAGI,GACtB,EAAKT,SAAS,CAAElC,MAAO,EAAKgC,MAAMhC,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKK,QAAUoF,GAEVzF,Q,EAIXU,QAAU,SAACT,GACTyF,QAAQC,IAAI1F,EAAK,YACjB,EAAK+E,SAAS,CAAElC,MAAM,YAAK,EAAKgC,MAAMhC,MAAM3C,QAAO,SAAAH,GAAI,OAAMA,EAAKC,KAAOA,IAAQD,EAAKM,e,EAGxFyC,QAAU,WACR,IAAM6C,EAAe,CACnB3F,GAAI4F,cACJzF,KAAM,GACNF,KAAM1C,EAAiBc,KACvB6B,OAAQ3C,EAAiBc,KACzB+B,QAAS,EACTC,SAAS,EACTC,QAAQ,GAEV,EAAKyE,SAAS,CAAElC,MAAM,GAAD,mBAAM,EAAKgC,MAAMhC,OAAjB,CAAwB8C,O,EAG/CvC,c,sBAAgB,8BAAAyC,EAAA,6DACd,EAAKd,SAAS,CAAC7B,SAAS,2BAAM,EAAK2B,MAAM3B,UAAlB,IAA4BmB,YAAY,MADjD,SAESyB,MAAM,gBAAiB,CAC5CC,OAAQ,OACRC,QAAS,CACP,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,EAAKtB,SAPd,cAERuB,EAFQ,gBASOA,EAASC,OAThB,OASR7G,EATQ,OAUd,EAAKuF,UAAS,SAAAF,GAEZ,OADAA,EAAM3B,SAASuB,OAASjF,EACjBqF,KAET,EAAKE,SAAS,CAAC7B,SAAS,2BAAM,EAAK2B,MAAM3B,UAAlB,IAA4BmB,YAAY,MAdjD,2C,EAkBhBlD,WAAa,SAACnB,GACZ,EAAK+E,SAAS,CAAElC,MAAO,EAAKgC,MAAMhC,MAAMrB,KAAI,SAAAzB,GAK1C,OAJGA,EAAKC,KAAOA,IACbD,EAAKO,QAAS,EACdP,EAAKM,SAAU,GAEVN,Q,uDAKT,OACE,sBAAKQ,UAAU,MAAf,UACI,oBAAIP,GAAG,aAAP,0BACA,cAAC,EAAD,CACE6C,MAAOhD,KAAKgF,MAAMhC,MAClBvB,WAAYzB,KAAKyB,WACjBU,cAAenC,KAAKmC,cACpBP,aAAc5B,KAAK4B,aACnBR,WAAYpB,KAAKoB,WACjBR,QAASZ,KAAKY,QACdqC,QAASjD,KAAKiD,QACd3B,WAAYtB,KAAKsB,aACnB,cAAC,EAAD,CACE+B,SAAUrD,KAAKgF,MAAM3B,SACrBE,cAAevD,KAAKuD,cACpBD,WAAYtD,KAAKsD,WACjBE,eAAgBxD,KAAKwD,eACrBC,eAAgBzD,KAAKyD,eACrBC,eAAgB1D,KAAK0D,wB,GAtLftB,a,OCFlBqE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bf341c99.chunk.js","sourcesContent":["export const BlendingModeEnum = {\n    DODGE: \"Dodge\", \n    ADDITION: \"Addition\", \n    OVERLAY: \"Overlay\", \n    GRAIN_EXTRACT: \"Grain Extract\", \n    DARKEN_ONLY: \"Darken Only\",\n    SCREEN: \"Screen\",\n    DIVIDE: \"Divide\",\n    GRAIN_MERGE: \"Grain Merge\",\n    DIFFERENCE: \"Difference\",\n    MULTIPLY: \"Multiply\",\n    SOFT_LIGHT: \"Soft Light\",\n    HARD_LIGHT: \"Hard Light\",\n    LIGHTEN_ONLY: \"Lighten Only\",\n    NONE:\"None\"\n  };\n\n  \nexport const FilterEnum = {\n  INVERT: \"Invert\", \n  POSTERIZE: \"Posterize\", \n  POSTERIZE2: \"Posterize 2\", \n  SOLARIZE: \"Solarize\",\n  EMBOSS: \"Emboss\",\n  GAUSSIAN: \"Gaussian Blur\",\n  FIND_EDGES: \"Find Edges\",\n  NONE: \"None\"\n};\n\nexport const SizeEnum = {\n  _1280x1280: \"1280x1280\", \n  _1024x768: \"1024x768\", \n  _768x1024: \"768x1024\",\n  _1600x900: \"1600x900\",\n  none: \"any\"\n};\n\nexport const goodSearchTerms = ['fire', 'lightning', 'rapper', 'explosion', 'abstract', 'painting', 'portrait', 'aesthetic',\n'rainbow', 'colorful', 'texture', 'landscape', 'trees', 'nature texture', 'fire-texture', 'crowd',\n'architecture', 'industrial', 'fractal', 'aesthetic texture', 'stunning space', 'psychedelic',\n'abstract dark', 'wallpaper', 'light streaks', 'gradient', 'overlay texture', 'sunset', 'sky',\n'water texture', 'statue', 'urban', 'floral',\n'streetwear', 'wildlife', 'cyberpunk', 'night city', 'liquid', 'fireworks', 'galaxy', 'spider web',\n'pattern', 'fabric', 'microscopic', 'stars', 'jellyfish', 'optical illusion', 'lightning storm',\n'waterfall', 'grunge', 'incredible view', 'festival night', 'fire breather', 'iridescent sky',\n'abstract wallpaper', 'ice', 'fractal patterns', 'flower', 'bikini', 'earth', 'shark',\n'reptile eye', 'bokeh', 'light show', 'drawing', 'black and white',\n'purple', 'white', 'black']\n\nObject.freeze(BlendingModeEnum);\nObject.freeze(FilterEnum);\nObject.freeze(SizeEnum);\n\nexport default BlendingModeEnum;\n","\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport default capitalizeFirstLetter","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { BlendingModeEnum, FilterEnum } from '../enums.js'\nimport capitalizeFirstLetter from '../utils.js'\nimport { Slider, Typography } from '@material-ui/core';\n\nexport class ImageCard extends Component {\n\n    render() {\n        const { id, mode, filter, term, opacity, fadeOut, fadeIn } = this.props.card;\n        return (\n            //fade classNames are to trigger CSS animation.\n            <div className={\"image-card card \" + (fadeOut ? 'fade-out' : '') + (fadeIn ? 'fade-in' : '')} \n                onAnimationEnd={this.props.delCard.bind(this, id)}>\n                {/* Header contains image search term and remove button */}\n                <div className=\"card-header\">\n                    <div className=\"form-inline\">\n                        <div className=\"col-xs-3\">\n                            <input type=\"search\" value={term} className=\"form-control rounded\" placeholder=\"Search term\" aria-label=\"Search\" aria-describedby=\"search-addon\" \n                                onChange={this.props.changeTerm.bind(this, id)}/>\n                        </div>\n                        <button className=\"btn btn-secondary\" onClick={this.props.setFadeOut.bind(this, id)}>x</button>\n                    </div>\n                </div>\n                \n                <div className=\"card-body\">\n                    \n                        {/* Mode selection */}\n                        <div className=\"form-row form-group form-inline\">\n                            <Typography variant='subtitle1'> Mode</Typography>\n                            <select className=\"form-control selector\" value={mode} \n                                    onChange={this.props.changeMode.bind(this, id)}>\n\n                                {Object.values(BlendingModeEnum).map((mode) => \n                                    <option key={mode} value={mode}>{capitalizeFirstLetter(mode)}</option>\n                                )}\n\n                            </select>\n                        </div>\n\n                        {/* Filter selection */}\n                        <div className=\"form-row form-group form-inline\">\n                        <Typography>Filter</Typography>\n                            <select className=\"form-control selector\" value={filter} \n                                    onChange={this.props.changeFilter.bind(this, id)}>\n\n                                {Object.values(FilterEnum).map((filter) => \n                                    <option key={filter} value={filter}>{capitalizeFirstLetter(filter)}</option>\n                                )}\n\n                            </select>\n                        </div>\n\n                        <div className=\"form-row form-group form-inline\">\n                            <Typography variant=\"subtitle1\">Opacity</Typography>\n                            <Slider value={opacity} max={1} min={0} step={0.01} scale={(x) => x*100}\n                                onChange={this.props.changeOpacity.bind(this, id)}/>\n                        </div>\n                    \n                </div>\n\n            </div>\n        )\n    }\n}\n\nImageCard.propTypes = {\n    card: PropTypes.object.isRequired\n}\nexport default ImageCard\n","import React, { Component } from 'react';\nimport ImageCard from './ImageCard';\nimport PropTypes from 'prop-types';\n\nclass ImageCards extends Component {\n\n    render () {\n        return ( \n            <div style={{display: \"flex\", flexFlow: \"row wrap\", justifyContent: \"flex-start\", \n                paddingBottom: \"15px\", backgroundColor: \"lightgray\", boxShadow: \"inset 5px 3px 27px 10px rgba(0,0,0,0.25)\",\n                margin:\"15px\", borderRadius: \"10px\", minHeight: \"315px\"}}>\n            {this.props.cards.map((card) => (\n                <ImageCard \n                    key={card.id} \n                    card={card} \n                    changeMode={this.props.changeMode}\n                    changeFilter={this.props.changeFilter}\n                    changeOpacity={this.props.changeOpacity}\n                    changeTerm={this.props.changeTerm}\n                    setFadeOut={this.props.setFadeOut}\n                    delCard={this.props.delCard}\n                    />\n            ))}\n            <button className=\"btn btn-dark\" onClick={this.props.newCard} disabled={this.props.cards.length >= 8}>+</button>\n            </div>\n        );\n    }\n}\n\nImageCards.propTypes = {\n    cards: PropTypes.array.isRequired\n}\n\nexport default ImageCards","import React, { useState } from 'react';\nimport { SizeEnum } from '../enums.js'\nimport FilerobotImageEditor from 'filerobot-image-editor';\n\n\nexport const ImageMenu = ({ settings, changeSize, generateImage, toggleFeatured, randomizeTerms, randomizeModes, is_featured }) => {\n    const [editorShown, setEditorShown] = useState(false);\n    return (\n        <div>\n            <div style={{width: \"250px\", height: \"250px\", float:\"left\", marginLeft:\"20px\", display:\"flex\", flexFlow: \"wrap column\", justifyContent: \"space-evenly\"}}>\n                <select className=\"form-control selector\" \n                    value={settings.width === 0 ? \"any\" : settings.width + \"x\" + settings.height} onChange={changeSize} \n                    style={{width: \"200px\", marginLeft:\"8px\"}}>\n\n                    {Object.values(SizeEnum).map((size) => \n                        <option key={size} value={size}>{size}</option>\n                    )}\n\n                </select>\n                <div className=\"form-check\" style={{marginLeft: \"10px\", marginBottom: \"5px\"}}>\n                    <input className=\"form-check-input\" style={{marginTop: \"10px\"}} type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" checked={is_featured} onClick={toggleFeatured}/>\n                    <label className=\"form-check-label\" for=\"flexCheckChecked\">\n                        Include non-featured images\n                    </label>\n                </div>\n                <button className=\"btn btn-secondary\" style={{width:\"auto\"}} onClick={randomizeTerms}>Random Terms</button>\n                <button className=\"btn btn-secondary\" style={{width:\"auto\"}} onClick={randomizeModes}>Random Modes</button>\n                <button className=\"btn btn-secondary\" style={{width:\"auto\"}}\n                    onClick={() => { setEditorShown(true) }}>Edit / Save</button>\n                    {/* TODO: disable button until ajax returns */}\n                <button className=\"btn btn-primary\" onClick={generateImage}\n                    style={{width:\"auto\", marginLeft:\"8px\"}} disabled={settings.generating}> {settings.generating ? \"generating...\" : \"GENERATE\"} </button>\n            </div>\n            <img \n                style={{maxWidth: '50%', height: 'auto', float: 'right', margin:\"15px\", marginRight:\"50px\", display:\"inline-block\"}} \n                src={'data:image/png;base64,'+settings.b64src}>\n            </img>\n            <FilerobotImageEditor\n                show={editorShown}\n                src={'data:image/png;base64,'+settings.b64src}\n                onClose={() => { setEditorShown(false) }}\n            />\n        </div>\n    )\n}\n\nexport default ImageMenu;","import './App.css';\nimport ImageCards from './components/ImageCards';\nimport ImageMenu from './components/ImageMenu';\nimport React, { Component } from 'react';\nimport { BlendingModeEnum, FilterEnum, goodSearchTerms } from './enums.js';\nimport {v4 as uuid} from 'uuid';\n\nclass App extends Component {\n  state = {\n    cards: [\n      {\n        id: 1,\n        term: 'Sunset Landscape',\n        mode: BlendingModeEnum.NONE,\n        filter: FilterEnum.NONE,\n        opacity: 1,\n        fadeOut: false,\n        fadeIn: false\n      },\n\n      {\n        id: 2,\n        term: 'Fireworks',\n        mode: BlendingModeEnum.SCREEN,\n        filter: FilterEnum.NONE,\n        opacity: 1,\n        fadeOut: false,\n        fadeIn: false\n      },\n\n      {\n        id: 3,\n        term: 'Gradient',\n        mode: BlendingModeEnum.OVERLAY,\n        filter: FilterEnum.NONE,\n        opacity: 0.7,\n        fadeOut: false,\n        fadeIn: false\n      }\n    ],\n\n    settings: {\n      width: 1280,\n      height: 1280,\n      featured_only: true,\n      generating: false,\n      b64src: \"\"\n    }\n  }\n\n  toggleFeatured = () => {\n    this.setState({settings: { ...this.state.settings, featured_only: !this.state.settings.featured_only}})\n  }\n\n  randomizeTerms = () => {\n    this.setState({ cards: this.state.cards.map(card => {\n      card.term = goodSearchTerms[Math.floor(Math.random() * goodSearchTerms.length)];\n      return card\n    })})\n  }\n\n  randomizeModes = () => {\n    this.setState({ cards: this.state.cards.map(card => {\n      const vals = Object.values(BlendingModeEnum);\n      card.mode = vals[Math.floor(Math.random() * vals.length)];\n      return card\n    })})\n  }\n\n  changeSize = (e) => {\n    var width_change, height_change;\n    width_change = height_change = 1280;\n    if (e.target.value === \"1024x768\") {\n      width_change = 1024;\n      height_change = 768;\n    } else if (e.target.value === \"768x1024\") {\n      width_change = 768;\n      height_change = 1024;\n    } else if (e.target.value === \"1600x900\") {\n      width_change = 1600;\n      height_change = 900;\n    } else if (e.target.value === \"any\") {\n      width_change = 0;\n      height_change = 0;\n    }\n    this.setState({settings: { ...this.state.settings, width: width_change, height: height_change}})\n  }\n\n  changeMode = (id, e) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.mode = e.target.value;\n      }\n      return card;\n    })});\n  }\n\n  changeFilter = (id, e) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.filter = e.target.value;\n      }\n      return card;\n    })});\n  }\n\n  changeTerm = (id, e) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.term = e.target.value;\n      }\n      return card;\n    })});\n  }\n\n  changeOpacity = (id, e, newValue) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.opacity = newValue;\n      }\n      return card;\n    })});\n  }\n\n  delCard = (id) => {\n    console.log(id + \" deleted\");\n    this.setState({ cards: [...this.state.cards.filter(card =>  (card.id !== id) || !card.fadeOut)]});\n  }\n\n  newCard = () => {\n    const insertedCard = {\n      id: uuid(),\n      term: '',\n      mode: BlendingModeEnum.NONE,\n      filter: BlendingModeEnum.NONE,\n      opacity: 1,\n      fadeOut: false,\n      fadeIn: true\n    }\n    this.setState({ cards: [...this.state.cards, insertedCard]})\n  }\n\n  generateImage = async () => {\n    this.setState({settings: { ...this.state.settings, generating: true}})\n    const response = await fetch('/api/generate', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'applications/json'\n      },\n      body: JSON.stringify(this.state)\n    })\n    const string = await response.text();\n    this.setState(state => {\n      state.settings.b64src = string;\n      return state;\n    })\n    this.setState({settings: { ...this.state.settings, generating: false}})\n  }\n\n\n  setFadeOut = (id) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.fadeIn = false;\n        card.fadeOut = true;\n      }\n      return card;\n    })});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <h1 id=\"site-title\">Image Masher</h1>\n          <ImageCards \n            cards={this.state.cards} \n            changeMode={this.changeMode} \n            changeOpacity={this.changeOpacity}\n            changeFilter={this.changeFilter}\n            changeTerm={this.changeTerm}\n            delCard={this.delCard}\n            newCard={this.newCard} \n            setFadeOut={this.setFadeOut}/>\n          <ImageMenu \n            settings={this.state.settings} \n            generateImage={this.generateImage}\n            changeSize={this.changeSize}\n            toggleFeatured={this.toggleFeatured}\n            randomizeTerms={this.randomizeTerms}\n            randomizeModes={this.randomizeModes}/>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}