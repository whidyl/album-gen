{"version":3,"sources":["enums.js","utils.js","components/ImageCard.js","components/ImageCards.js","components/ImageMenu.js","App.js","index.js"],"names":["BlendingModeEnum","DODGE","ADDITION","OVERLAY","GRAIN_EXTRACT","DARKEN_ONLY","SCREEN","DIVIDE","GRAIN_MERGE","DIFFERENCE","MULTIPLY","SOFT_LIGHT","HARD_LIGHT","LIGHTEN_ONLY","NONE","FilterEnum","BRIGHT","BLACK_AND_WHITE","EDGE_DETECTOR","SizeEnum","_1280x1280","_1024x768","_768x1024","Object","freeze","capitalizeFirstLetter","string","charAt","toUpperCase","slice","ImageCard","this","props","card","id","mode","filter","term","opacity","fadeOut","fadeIn","className","onAnimationEnd","delCard","bind","type","value","placeholder","aria-label","aria-describedby","onChange","changeTerm","onClick","setFadeOut","Typography","variant","changeMode","values","map","changeFilter","Slider","max","min","step","scale","x","changeOpacity","Component","ImageCards","style","display","flexFlow","justifyContent","paddingBottom","backgroundColor","boxShadow","margin","borderRadius","minHeight","cards","newCard","ImageMenu","settings","changeSize","generateImage","useState","editorShown","setEditorShown","width","height","float","marginLeft","size","marginRight","src","b64src","show","onClose","App","state","e","setState","target","console","log","newValue","insertedCard","uuid","a","fetch","method","headers","body","JSON","stringify","response","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAaA,G,MAAmB,CAC5BC,MAAO,QACPC,SAAU,WACVC,QAAS,UACTC,cAAe,gBACfC,YAAa,cACbC,OAAQ,SACRC,OAAQ,SACRC,YAAa,cACbC,WAAY,aACZC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdC,KAAK,SAIIC,EAAa,CACxBC,OAAQ,SACRC,gBAAiB,gBACjBC,cAAe,eACfJ,KAAM,QAGKK,EAAW,CACtBC,WAAY,YACZC,UAAW,WACXC,UAAW,YAGbC,OAAOC,OAAOxB,GACduB,OAAOC,OAAOT,GACdQ,OAAOC,OAAOL,GC5BCM,MAJf,SAA+BC,GAC3B,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,kBCmE1CC,EA/Df,uKAEc,IAAD,EACwDC,KAAKC,MAAMC,KAAhEC,EADH,EACGA,GAAIC,EADP,EACOA,KAAMC,EADb,EACaA,OAAQC,EADrB,EACqBA,KAAMC,EAD3B,EAC2BA,QAASC,EADpC,EACoCA,QAASC,EAD7C,EAC6CA,OAClD,OAEI,cADA,CACA,OAAKC,UAAW,oBAAsBF,EAAU,WAAa,KAAOC,EAAS,UAAY,IACrFE,eAAgBX,KAAKC,MAAMW,QAAQC,KAAKb,KAAMG,GADlD,UAGI,qBAAKO,UAAU,cAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAOI,KAAK,SAASC,MAAOT,EAAMI,UAAU,uBAAuBM,YAAY,cAAcC,aAAW,SAASC,mBAAiB,eAC9HC,SAAUnB,KAAKC,MAAMmB,WAAWP,KAAKb,KAAMG,OAEnD,wBAAQO,UAAU,oBAAoBW,QAASrB,KAAKC,MAAMqB,WAAWT,KAAKb,KAAMG,GAAhF,oBAIR,sBAAKO,UAAU,YAAf,UAGQ,sBAAKA,UAAU,kCAAf,UACI,cAACa,EAAA,EAAD,CAAYC,QAAQ,YAApB,mBACA,wBAAQd,UAAU,wBAAwBK,MAAOX,EACzCe,SAAUnB,KAAKC,MAAMwB,WAAWZ,KAAKb,KAAMG,GADnD,SAGKX,OAAOkC,OAAOzD,GAAkB0D,KAAI,SAACvB,GAAD,OACjC,wBAAmBW,MAAOX,EAA1B,SAAiCV,EAAsBU,IAA1CA,WAOzB,sBAAKM,UAAU,kCAAf,UACA,cAACa,EAAA,EAAD,qBACI,wBAAQb,UAAU,wBAAwBK,MAAOV,EACzCc,SAAUnB,KAAKC,MAAM2B,aAAaf,KAAKb,KAAMG,GADrD,SAGKX,OAAOkC,OAAO1C,GAAY2C,KAAI,SAACtB,GAAD,OAC3B,wBAAqBU,MAAOV,EAA5B,SAAqCX,EAAsBW,IAA9CA,WAMzB,sBAAKK,UAAU,kCAAf,UACI,cAACa,EAAA,EAAD,CAAYC,QAAQ,YAApB,qBACA,cAACK,EAAA,EAAD,CAAQd,MAAOR,EAASuB,IAAK,EAAGC,IAAK,EAAGC,KAAM,IAAMC,MAAO,SAACC,GAAD,OAAS,IAAFA,GAC9Df,SAAUnB,KAAKC,MAAMkC,cAActB,KAAKb,KAAMG,kBAlD9E,GAA+BiC,aC2BhBC,E,uKA3BA,IAAD,OACN,OACI,sBAAKC,MAAO,CAACC,QAAS,OAAQC,SAAU,WAAYC,eAAgB,aAChEC,cAAe,OAAQC,gBAAiB,YAAaC,UAAW,2CAChEC,OAAO,OAAQC,aAAc,OAAQC,UAAW,SAFpD,UAGC/C,KAAKC,MAAM+C,MAAMrB,KAAI,SAACzB,GAAD,OAClB,cAAC,EAAD,CAEIA,KAAMA,EACNuB,WAAY,EAAKxB,MAAMwB,WACvBG,aAAc,EAAK3B,MAAM2B,aACzBO,cAAe,EAAKlC,MAAMkC,cAC1Bf,WAAY,EAAKnB,MAAMmB,WACvBE,WAAY,EAAKrB,MAAMqB,WACvBV,QAAS,EAAKX,MAAMW,SAPfV,EAAKC,OAUlB,wBAAQO,UAAU,eAAeW,QAASrB,KAAKC,MAAMgD,QAArD,sB,GAnBab,a,iCCsCVc,EApCU,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EAC5BC,oBAAS,GADmB,mBAC3DC,EAD2D,KAC9CC,EAD8C,KAElE,OACI,gCACI,sBAAKlB,MAAO,CAACmB,MAAO,QAASC,OAAQ,QAASC,MAAM,OAAQC,WAAW,OAAQrB,QAAQ,OAAQC,SAAU,cAAeC,eAAgB,gBAAxI,UACI,wBAAQ/B,UAAU,wBAAwBK,MAAOoC,EAASM,MAAQ,IAAMN,EAASO,OAAQvC,SAAUiC,EAC/Fd,MAAO,CAACmB,MAAO,QAASG,WAAW,OADvC,SAGKpE,OAAOkC,OAAOtC,GAAUuC,KAAI,SAACkC,GAAD,OACzB,wBAAmB9C,MAAO8C,EAA1B,SAAiCA,GAApBA,QAIrB,wBAAQnD,UAAU,oBAAoB4B,MAAO,CAACmB,MAAM,QAApD,0BACA,wBAAQ/C,UAAU,oBAAoB4B,MAAO,CAACmB,MAAM,QAApD,yBACA,wBAAQ/C,UAAU,oBAAoB4B,MAAO,CAACmB,MAAM,QAChDpC,QAAS,WAAQmC,GAAe,IADpC,yBAGA,wBAAQ9C,UAAU,kBAAkBW,QAASgC,EACzCf,MAAO,CAACmB,MAAM,OAAQG,WAAW,OADrC,yBAGJ,qBAAKlD,UAAU,kBAAkB4B,MAAO,CAACO,OAAO,OAAQiB,YAAY,OAAQL,MAAON,EAASM,MAAM,EAAE,KAAMC,OAAQP,EAASO,OAAO,EAAE,KAAMnB,QAAQ,eAAgBoB,MAAM,SAAxK,SAII,qBAAKI,IAAK,yBAAyBZ,EAASa,WAEhD,cAAC,IAAD,CACIC,KAAMV,EACNQ,IAAK,yBAAyBZ,EAASa,OACvCE,QAAS,WAAQV,GAAe,U,SC2GjCW,E,4MAtIbC,MAAQ,CACNpB,MAAO,CACL,CACE7C,GAAI,EACJG,KAAM,SACNF,KAAMnC,EAAiBU,SACvB0B,OAAQrB,EAAWG,cACnBoB,QAAS,EACTC,SAAS,EACTC,QAAQ,GAGV,CACEN,GAAI,EACJG,KAAM,OACNF,KAAMnC,EAAiBc,KACvBsB,OAAQrB,EAAWE,gBACnBqB,QAAS,IACTC,SAAS,EACTC,QAAQ,IAIZ0C,SAAU,CACRM,MAAO,KACPC,OAAQ,KACRM,OAAQ,K,EAIZvC,WAAa,SAACtB,EAAIkE,GAChB,EAAKC,SAAS,CAAEtB,MAAO,EAAKoB,MAAMpB,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKE,KAAOiE,EAAEE,OAAOxD,OAEhBb,OAETsE,QAAQC,IAAI,EAAKL,Q,EAGnBxC,aAAe,SAACzB,EAAIkE,GAClB,EAAKC,SAAS,CAAEtB,MAAO,EAAKoB,MAAMpB,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKG,OAASgE,EAAEE,OAAOxD,OAElBb,OAETsE,QAAQC,IAAI,EAAKL,Q,EAGnBhD,WAAa,SAACjB,EAAIkE,GAChB,EAAKC,SAAS,CAAEtB,MAAO,EAAKoB,MAAMpB,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKI,KAAO+D,EAAEE,OAAOxD,OAEhBb,OAETsE,QAAQC,IAAI,EAAKL,Q,EAGnBjC,cAAgB,SAAChC,EAAIkE,EAAGK,GACtB,EAAKJ,SAAS,CAAEtB,MAAO,EAAKoB,MAAMpB,MAAMrB,KAAI,SAAAzB,GAI1C,OAHGA,EAAKC,KAAOA,IACbD,EAAKK,QAAUmE,GAEVxE,OAETsE,QAAQC,IAAI,EAAKL,Q,EAGnBxD,QAAU,SAACT,GACTqE,QAAQC,IAAItE,EAAK,YACjB,EAAKmE,SAAS,CAAEtB,MAAM,YAAK,EAAKoB,MAAMpB,MAAM3C,QAAO,SAAAH,GAAI,OAAMA,EAAKC,KAAOA,IAAQD,EAAKM,cACtFgE,QAAQC,IAAI,EAAKL,Q,EAGnBnB,QAAU,WACR,IAAM0B,EAAe,CACnBxE,GAAIyE,cACJtE,KAAM,GACNF,KAAMnC,EAAiBc,KACvBsB,OAAQpC,EAAiBc,KACzBwB,QAAS,EACTC,SAAS,EACTC,QAAQ,GAEV,EAAK6D,SAAS,CAAEtB,MAAM,GAAD,mBAAM,EAAKoB,MAAMpB,OAAjB,CAAwB2B,O,EAG/CtB,c,sBAAgB,8BAAAwB,EAAA,sEACSC,MAAM,gBAAiB,CAC5CC,OAAQ,OACRC,QAAS,CACP,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,EAAKf,SANd,cACRgB,EADQ,gBAQOA,EAASC,OARhB,OAQR1F,EARQ,OASd,EAAK2E,UAAS,SAAAF,GAEZ,OADAA,EAAMjB,SAASa,OAASrE,EACjByE,KAXK,2C,EAgBhB9C,WAAa,SAACnB,GACZ,EAAKmE,SAAS,CAAEtB,MAAO,EAAKoB,MAAMpB,MAAMrB,KAAI,SAAAzB,GAK1C,OAJGA,EAAKC,KAAOA,IACbD,EAAKO,QAAS,EACdP,EAAKM,SAAU,GAEVN,Q,uDAKT,OACE,sBAAKQ,UAAU,MAAf,UACI,oBAAIP,GAAG,aAAP,0BACA,cAAC,EAAD,CACE6C,MAAOhD,KAAKoE,MAAMpB,MAClBvB,WAAYzB,KAAKyB,WACjBU,cAAenC,KAAKmC,cACpBP,aAAc5B,KAAK4B,aACnBR,WAAYpB,KAAKoB,WACjBR,QAASZ,KAAKY,QACdqC,QAASjD,KAAKiD,QACd3B,WAAYtB,KAAKsB,aACnB,cAAC,EAAD,CAAW6B,SAAUnD,KAAKoE,MAAMjB,SAAUE,cAAerD,KAAKqD,uB,GAjItDjB,a,OCHlBkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e883a02a.chunk.js","sourcesContent":["export const BlendingModeEnum = {\n    DODGE: \"Dodge\", \n    ADDITION: \"Addition\", \n    OVERLAY: \"Overlay\", \n    GRAIN_EXTRACT: \"Grain Extract\", \n    DARKEN_ONLY: \"Darken Only\",\n    SCREEN: \"Screen\",\n    DIVIDE: \"Divide\",\n    GRAIN_MERGE: \"Grain Merge\",\n    DIFFERENCE: \"Difference\",\n    MULTIPLY: \"Multiply\",\n    SOFT_LIGHT: \"Soft Light\",\n    HARD_LIGHT: \"Hard Light\",\n    LIGHTEN_ONLY: \"Lighten Only\",\n    NONE:\"None\"\n  };\n\n  \nexport const FilterEnum = {\n  BRIGHT: \"Bright\", \n  BLACK_AND_WHITE: \"blackAndWhite\", \n  EDGE_DETECTOR: \"edgeDetector\", \n  NONE: \"none\"\n};\n\nexport const SizeEnum = {\n  _1280x1280: \"1280x1280\", \n  _1024x768: \"1024x768\", \n  _768x1024: \"768x1024\", \n};\n\nObject.freeze(BlendingModeEnum);\nObject.freeze(FilterEnum);\nObject.freeze(SizeEnum);\n\nexport default BlendingModeEnum;\n","\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport default capitalizeFirstLetter","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { BlendingModeEnum, FilterEnum } from '../enums.js'\nimport capitalizeFirstLetter from '../utils.js'\nimport { Slider, Typography } from '@material-ui/core';\n\nexport class ImageCard extends Component {\n\n    render() {\n        const { id, mode, filter, term, opacity, fadeOut, fadeIn } = this.props.card;\n        return (\n            //fade classNames are to trigger CSS animation.\n            <div className={\"image-card card \" + (fadeOut ? 'fade-out' : '') + (fadeIn ? 'fade-in' : '')} \n                onAnimationEnd={this.props.delCard.bind(this, id)}>\n                {/* Header contains image search term and remove button */}\n                <div className=\"card-header\">\n                    <div className=\"form-inline\">\n                        <div className=\"col-xs-3\">\n                            <input type=\"search\" value={term} className=\"form-control rounded\" placeholder=\"Search term\" aria-label=\"Search\" aria-describedby=\"search-addon\" \n                                onChange={this.props.changeTerm.bind(this, id)}/>\n                        </div>\n                        <button className=\"btn btn-secondary\" onClick={this.props.setFadeOut.bind(this, id)}>x</button>\n                    </div>\n                </div>\n                \n                <div className=\"card-body\">\n                    \n                        {/* Mode selection */}\n                        <div className=\"form-row form-group form-inline\">\n                            <Typography variant='subtitle1'> Mode</Typography>\n                            <select className=\"form-control selector\" value={mode} \n                                    onChange={this.props.changeMode.bind(this, id)}>\n\n                                {Object.values(BlendingModeEnum).map((mode) => \n                                    <option key={mode} value={mode}>{capitalizeFirstLetter(mode)}</option>\n                                )}\n\n                            </select>\n                        </div>\n\n                        {/* Filter selection */}\n                        <div className=\"form-row form-group form-inline\">\n                        <Typography>Filter</Typography>\n                            <select className=\"form-control selector\" value={filter} \n                                    onChange={this.props.changeFilter.bind(this, id)}>\n\n                                {Object.values(FilterEnum).map((filter) => \n                                    <option key={filter} value={filter}>{capitalizeFirstLetter(filter)}</option>\n                                )}\n\n                            </select>\n                        </div>\n\n                        <div className=\"form-row form-group form-inline\">\n                            <Typography variant=\"subtitle1\">Opacity</Typography>\n                            <Slider value={opacity} max={1} min={0} step={0.01} scale={(x) => x*100}\n                                onChange={this.props.changeOpacity.bind(this, id)}/>\n                        </div>\n                    \n                </div>\n\n            </div>\n        )\n    }\n}\n\nImageCard.propTypes = {\n    card: PropTypes.object.isRequired\n}\nexport default ImageCard\n","import React, { Component } from 'react';\nimport ImageCard from './ImageCard';\nimport PropTypes from 'prop-types';\n\nclass ImageCards extends Component {\n\n    render () {\n        return ( \n            <div style={{display: \"flex\", flexFlow: \"row wrap\", justifyContent: \"flex-start\", \n                paddingBottom: \"15px\", backgroundColor: \"lightgray\", boxShadow: \"inset 5px 3px 27px 10px rgba(0,0,0,0.25)\",\n                margin:\"15px\", borderRadius: \"10px\", minHeight: \"315px\"}}>\n            {this.props.cards.map((card) => (\n                <ImageCard \n                    key={card.id} \n                    card={card} \n                    changeMode={this.props.changeMode}\n                    changeFilter={this.props.changeFilter}\n                    changeOpacity={this.props.changeOpacity}\n                    changeTerm={this.props.changeTerm}\n                    setFadeOut={this.props.setFadeOut}\n                    delCard={this.props.delCard}\n                    />\n            ))}\n            <button className=\"btn btn-dark\" onClick={this.props.newCard}>+</button>\n            </div>\n        );\n    }\n}\n\nImageCards.propTypes = {\n    cards: PropTypes.array.isRequired\n}\n\nexport default ImageCards","import React, { useState } from 'react';\nimport { SizeEnum } from '../enums.js'\nimport { Magnifier } from \"react-image-magnifiers\";\nimport FilerobotImageEditor from 'filerobot-image-editor';\n\n\nexport const ImageMenu = ({ settings, changeSize, generateImage }) => {\n    const [editorShown, setEditorShown] = useState(false);\n    return (\n        <div>\n            <div style={{width: \"200px\", height: \"230px\", float:\"left\", marginLeft:\"20px\", display:\"flex\", flexFlow: \"wrap column\", justifyContent: \"space-evenly\"}}>\n                <select className=\"form-control selector\" value={settings.width + \"x\" + settings.height} onChange={changeSize} \n                    style={{width: \"200px\", marginLeft:\"8px\"}}>\n\n                    {Object.values(SizeEnum).map((size) => \n                        <option key={size} value={size}>{size}</option>\n                    )}\n\n                </select>\n                <button className=\"btn btn-secondary\" style={{width:\"auto\"}}>Random Terms</button>\n                <button className=\"btn btn-secondary\" style={{width:\"auto\"}}>Save Preset</button>\n                <button className=\"btn btn-secondary\" style={{width:\"auto\"}}\n                    onClick={() => { setEditorShown(true) }}>Edit / Save</button>\n                    {/* TODO: disable button until ajax returns */}\n                <button className=\"btn btn-primary\" onClick={generateImage}\n                    style={{width:\"auto\", marginLeft:\"8px\"}}>GENERATE</button>\n            </div>\n            <div className=\"image-container\" style={{margin:\"15px\", marginRight:\"50px\", width: settings.width/2+\"px\", height: settings.height/2+\"px\", display:\"inline-block\", float:\"right\"}}>\n                {/* <Magnifier style={{height: settings.height/2+\"px\", width: settings.width/2+\"px\"}}\n                imageSrc={'data:image/png;base64,'+settings.b64src}\n                dragToMove={false}/> */}\n                <img src={'data:image/png;base64,'+settings.b64src}></img>\n            </div>\n            <FilerobotImageEditor\n                show={editorShown}\n                src={'data:image/png;base64,'+settings.b64src}\n                onClose={() => { setEditorShown(false) }}\n            />\n        </div>\n    )\n}\n\nexport default ImageMenu;","import './App.css';\nimport ImageCards from './components/ImageCards';\nimport ImageMenu from './components/ImageMenu';\nimport React, { Component } from 'react';\nimport { BlendingModeEnum, FilterEnum } from './enums.js';\nimport {v4 as uuid} from 'uuid';\n\n\nclass App extends Component {\n  state = {\n    cards: [\n      {\n        id: 1,\n        term: 'Sunset',\n        mode: BlendingModeEnum.MULTIPLY,\n        filter: FilterEnum.EDGE_DETECTOR,\n        opacity: 1,\n        fadeOut: false,\n        fadeIn: false\n      },\n\n      {\n        id: 2,\n        term: 'Snow',\n        mode: BlendingModeEnum.NONE,\n        filter: FilterEnum.BLACK_AND_WHITE,\n        opacity: 0.15,\n        fadeOut: false,\n        fadeIn: false\n      }\n    ],\n\n    settings: {\n      width: 1280,\n      height: 1280,\n      b64src: \"\"\n    }\n  }\n\n  changeMode = (id, e) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.mode = e.target.value;\n      }\n      return card;\n    })});\n    console.log(this.state);\n  }\n\n  changeFilter = (id, e) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.filter = e.target.value;\n      }\n      return card;\n    })});\n    console.log(this.state);\n  }\n\n  changeTerm = (id, e) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.term = e.target.value;\n      }\n      return card;\n    })});\n    console.log(this.state);\n  }\n\n  changeOpacity = (id, e, newValue) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.opacity = newValue;\n      }\n      return card;\n    })});\n    console.log(this.state);\n  }\n\n  delCard = (id) => {\n    console.log(id + \" deleted\");\n    this.setState({ cards: [...this.state.cards.filter(card =>  (card.id !== id) || !card.fadeOut)]});\n    console.log(this.state);\n  }\n\n  newCard = () => {\n    const insertedCard = {\n      id: uuid(),\n      term: '',\n      mode: BlendingModeEnum.NONE,\n      filter: BlendingModeEnum.NONE,\n      opacity: 1,\n      fadeOut: false,\n      fadeIn: true\n    }\n    this.setState({ cards: [...this.state.cards, insertedCard]})\n  }\n\n  generateImage = async () => {\n    const response = await fetch('/api/generate', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'applications/json'\n      },\n      body: JSON.stringify(this.state)\n    })\n    const string = await response.text();\n    this.setState(state => {\n      state.settings.b64src = string;\n      return state;\n    })\n  }\n\n\n  setFadeOut = (id) => {\n    this.setState({ cards: this.state.cards.map(card => {\n      if(card.id === id) {\n        card.fadeIn = false;\n        card.fadeOut = true;\n      }\n      return card;\n    })});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <h1 id=\"site-title\">Image Masher</h1>\n          <ImageCards \n            cards={this.state.cards} \n            changeMode={this.changeMode} \n            changeOpacity={this.changeOpacity}\n            changeFilter={this.changeFilter}\n            changeTerm={this.changeTerm}\n            delCard={this.delCard}\n            newCard={this.newCard} \n            setFadeOut={this.setFadeOut}/>\n          <ImageMenu settings={this.state.settings} generateImage={this.generateImage}/>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}